module c(
input clk,
input reset,
output reg[7:0]count
);
initial
begin
count<=0;
end
always @(posedge clk or posedge reset)
begin
if(reset)
count<=0;
else
count<=count+1;
end
endmodule


module ct;
  reg clk;
  reg reset;
  wire [7:0] count;

  c dut (
    clk,reset,count
  );
initial
begin
clk=0;
reset=1; #10;
reset=0;#100;
end
always
#5 clk =~clk;
endmodule

create_clock -name clock -period 10 -waveform {0 5} [get_ports clock]
set_input_delay -max 1.0 [get_ports A] -clock [get_clocks clock] 
set_input_delay -max 1.0 [get_ports B] -clock [get_clocks clock] 
set_input_delay -max 1.0 [get_ports reset] -clock [get_clocks clock]
set_output_delay -max 1.0  [get_ports sum] -clock [get_clocks clock]
